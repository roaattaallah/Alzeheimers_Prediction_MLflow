{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Typography,Box,Paper,CircularProgress,Grid}from'@mui/material';import ModelSelector from'./components/ModelSelector';import InputForm from'./components/InputForm';import PredictionResult from'./components/PredictionResult';import axios from'axios';function App(){const[loading,setLoading]=useState(true);const[models,setModels]=useState({});const[features,setFeatures]=useState({});const[selectedModel,setSelectedModel]=useState('');const[prediction,setPrediction]=useState(null);const[error,setError]=useState(null);// Fetch models and features on component mount\nuseEffect(()=>{const fetchData=async()=>{try{setLoading(true);const modelsResponse=await axios.get('/api/models');const featuresResponse=await axios.get('/api/features');// Process models data to ensure consistent structure\nconst processedModels={};Object.entries(modelsResponse.data).forEach(_ref=>{let[modelName,modelDetails]=_ref;processedModels[modelName]={accuracy:modelDetails.accuracy,roc_auc:modelDetails.roc_auc||0,is_best:modelDetails.is_best,// Ensure parameters are available under a consistent key name\nparameters:modelDetails.parameters||modelDetails.params||{}};});setModels(processedModels);setFeatures(featuresResponse.data);// Set the best model as default or the one with highest ROC AUC if no best is marked\nlet bestModel=Object.entries(processedModels).find(_ref2=>{let[_,details]=_ref2;return details.is_best;});if(!bestModel){// If no best model is marked, select the one with highest ROC AUC\nbestModel=Object.entries(processedModels).reduce((best,_ref3)=>{let[name,details]=_ref3;if(!best||details.roc_auc&&details.roc_auc>best[1].roc_auc){return[name,details];}return best;},null);// If no model has ROC AUC, fall back to accuracy\nif(!bestModel||!bestModel[1].roc_auc){bestModel=Object.entries(processedModels).reduce((best,_ref4)=>{let[name,details]=_ref4;if(!best||details.accuracy>best[1].accuracy){return[name,details];}return best;},null);}}if(bestModel){setSelectedModel(bestModel[0]);}setError(null);}catch(err){console.error('Error fetching data:',err);setError('Failed to load models or features. Please check if the backend server is running.');}finally{setLoading(false);}};fetchData();},[]);const handleModelChange=event=>{setSelectedModel(event.target.value);setPrediction(null);};const handleSubmit=async patientData=>{try{setLoading(true);const response=await axios.post('/api/predict',{model_name:selectedModel,parameters:patientData});setPrediction(response.data);setError(null);// Scroll to top when prediction is received\nwindow.scrollTo({top:0,behavior:'smooth'});}catch(err){console.error('Error making prediction:',err);setError('Failed to make a prediction. Please try again.');setPrediction(null);}finally{setLoading(false);}};return/*#__PURE__*/React.createElement(Container,{maxWidth:\"lg\"},/*#__PURE__*/React.createElement(Box,{sx:{my:4}},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",component:\"h1\",gutterBottom:true,align:\"center\",color:\"primary\"},\"\\uD83E\\uDDE0 Alzheimer's Disease Prediction Tool\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",align:\"center\",gutterBottom:true},\"This application predicts the likelihood of Alzheimer's disease based on patient parameters using tuned ML models.\"),error&&/*#__PURE__*/React.createElement(Paper,{sx:{p:2,my:2,bgcolor:'#ffebee'}},/*#__PURE__*/React.createElement(Typography,{color:\"error\"},error)),loading&&!error?/*#__PURE__*/React.createElement(Box,{sx:{display:'flex',justifyContent:'center',my:4}},/*#__PURE__*/React.createElement(CircularProgress,null)):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:4},/*#__PURE__*/React.createElement(ModelSelector,{models:models,selectedModel:selectedModel,onChange:handleModelChange}),prediction&&/*#__PURE__*/React.createElement(PredictionResult,{prediction:prediction})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:8},/*#__PURE__*/React.createElement(InputForm,{onPredict:handleSubmit,loading:loading,featureDescriptions:features}))))));}export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Paper","CircularProgress","Grid","ModelSelector","InputForm","PredictionResult","axios","App","loading","setLoading","models","setModels","features","setFeatures","selectedModel","setSelectedModel","prediction","setPrediction","error","setError","fetchData","modelsResponse","get","featuresResponse","processedModels","Object","entries","data","forEach","_ref","modelName","modelDetails","accuracy","roc_auc","is_best","parameters","params","bestModel","find","_ref2","_","details","reduce","best","_ref3","name","_ref4","err","console","handleModelChange","event","target","value","handleSubmit","patientData","response","post","model_name","window","scrollTo","top","behavior","createElement","maxWidth","sx","my","variant","component","gutterBottom","align","color","p","bgcolor","display","justifyContent","Fragment","container","spacing","item","xs","md","onChange","onPredict","featureDescriptions"],"sources":["/Users/roaattaallah/Desktop/MLFlow_Project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Paper, CircularProgress, Grid } from '@mui/material';\nimport ModelSelector from './components/ModelSelector';\nimport InputForm from './components/InputForm';\nimport PredictionResult from './components/PredictionResult';\nimport axios from 'axios';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [models, setModels] = useState({});\n  const [features, setFeatures] = useState({});\n  const [selectedModel, setSelectedModel] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch models and features on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const modelsResponse = await axios.get('/api/models');\n        const featuresResponse = await axios.get('/api/features');\n        \n        // Process models data to ensure consistent structure\n        const processedModels = {};\n        Object.entries(modelsResponse.data).forEach(([modelName, modelDetails]) => {\n          processedModels[modelName] = {\n            accuracy: modelDetails.accuracy,\n            roc_auc: modelDetails.roc_auc || 0,\n            is_best: modelDetails.is_best,\n            // Ensure parameters are available under a consistent key name\n            parameters: modelDetails.parameters || modelDetails.params || {}\n          };\n        });\n        \n        setModels(processedModels);\n        setFeatures(featuresResponse.data);\n        \n        // Set the best model as default or the one with highest ROC AUC if no best is marked\n        let bestModel = Object.entries(processedModels).find(\n          ([_, details]) => details.is_best\n        );\n        \n        if (!bestModel) {\n          // If no best model is marked, select the one with highest ROC AUC\n          bestModel = Object.entries(processedModels).reduce((best, [name, details]) => {\n            if (!best || (details.roc_auc && details.roc_auc > best[1].roc_auc)) {\n              return [name, details];\n            }\n            return best;\n          }, null);\n          \n          // If no model has ROC AUC, fall back to accuracy\n          if (!bestModel || !bestModel[1].roc_auc) {\n            bestModel = Object.entries(processedModels).reduce((best, [name, details]) => {\n              if (!best || details.accuracy > best[1].accuracy) {\n                return [name, details];\n              }\n              return best;\n            }, null);\n          }\n        }\n        \n        if (bestModel) {\n          setSelectedModel(bestModel[0]);\n        }\n        \n        setError(null);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to load models or features. Please check if the backend server is running.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleModelChange = (event) => {\n    setSelectedModel(event.target.value);\n    setPrediction(null);\n  };\n\n  const handleSubmit = async (patientData) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/predict', {\n        model_name: selectedModel,\n        parameters: patientData\n      });\n      \n      setPrediction(response.data);\n      setError(null);\n      \n      // Scroll to top when prediction is received\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } catch (err) {\n      console.error('Error making prediction:', err);\n      setError('Failed to make a prediction. Please try again.');\n      setPrediction(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ my: 4 }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\" color=\"primary\">\n          ðŸ§  Alzheimer's Disease Prediction Tool\n        </Typography>\n        \n        <Typography variant=\"subtitle1\" align=\"center\" gutterBottom>\n          This application predicts the likelihood of Alzheimer's disease based on patient parameters using tuned ML models.\n        </Typography>\n\n        {error && (\n          <Paper sx={{ p: 2, my: 2, bgcolor: '#ffebee' }}>\n            <Typography color=\"error\">{error}</Typography>\n          </Paper>\n        )}\n\n        {loading && !error ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : (\n          <>\n            <Grid container spacing={3}>\n              {/* Left side: Model selector and prediction result */}\n              <Grid item xs={12} md={4}>\n                <ModelSelector \n                  models={models} \n                  selectedModel={selectedModel} \n                  onChange={handleModelChange} \n                />\n                \n                {prediction && (\n                  <PredictionResult prediction={prediction} />\n                )}\n              </Grid>\n              \n              {/* Right side: Input form */}\n              <Grid item xs={12} md={8}>\n                <InputForm \n                  onPredict={handleSubmit}\n                  loading={loading}\n                  featureDescriptions={features}\n                />\n              </Grid>\n            </Grid>\n          </>\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}