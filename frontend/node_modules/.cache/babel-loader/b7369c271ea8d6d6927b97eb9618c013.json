{"ast":null,"code":"var _jsxFileName = \"/Users/roaattaallah/Desktop/MLFlow_Project/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Paper, CircularProgress, Grid, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, AppBar, Toolbar, useTheme, useMediaQuery, Divider, alpha } from '@mui/material';\nimport ModelSelector from './components/ModelSelector';\nimport InputForm from './components/InputForm';\nimport PredictionResult from './components/PredictionResult';\nimport axios from 'axios';\nimport './styles.css';\nimport MedicalInformationIcon from '@mui/icons-material/MedicalInformation';\n\n// Define the API base URL\nconst API_BASE_URL = 'http://localhost:5030';\nfunction App() {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [loading, setLoading] = useState(true);\n  const [models, setModels] = useState({});\n  const [features, setFeatures] = useState({});\n  const [selectedModel, setSelectedModel] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const [error, setError] = useState(null);\n  const [predictionMode, setPredictionMode] = useState('single'); // 'single', 'ensemble', or 'high-accuracy'\n\n  // Fetch models and features on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // Add timestamp to prevent caching\n        const timestamp = new Date().getTime();\n        const modelsResponse = await axios.get(`${API_BASE_URL}/api/models?_t=${timestamp}`);\n        const featuresResponse = await axios.get(`${API_BASE_URL}/api/features?_t=${timestamp}`);\n\n        // Process models data to ensure consistent structure\n        const processedModels = {};\n        Object.entries(modelsResponse.data).forEach(([modelName, modelDetails]) => {\n          processedModels[modelName] = {\n            accuracy: modelDetails.accuracy,\n            roc_auc: modelDetails.roc_auc || 0,\n            is_best: modelDetails.is_best,\n            // Ensure parameters are available under a consistent key name\n            parameters: modelDetails.parameters || modelDetails.params || {}\n          };\n        });\n        setModels(processedModels);\n        setFeatures(featuresResponse.data);\n\n        // Set the best model as default or the one with highest ROC AUC if no best is marked\n        let bestModel = Object.entries(processedModels).find(([_, details]) => details.is_best);\n        if (!bestModel) {\n          // If no best model is marked, select the one with highest ROC AUC\n          bestModel = Object.entries(processedModels).reduce((best, [name, details]) => {\n            if (!best || details.roc_auc && details.roc_auc > best[1].roc_auc) {\n              return [name, details];\n            }\n            return best;\n          }, null);\n\n          // If no model has ROC AUC, fall back to accuracy\n          if (!bestModel || !bestModel[1].roc_auc) {\n            bestModel = Object.entries(processedModels).reduce((best, [name, details]) => {\n              if (!best || details.accuracy > best[1].accuracy) {\n                return [name, details];\n              }\n              return best;\n            }, null);\n          }\n        }\n        if (bestModel) {\n          setSelectedModel(bestModel[0]);\n        }\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to load models or features. Please check if the backend server is running.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleModelChange = event => {\n    setSelectedModel(event.target.value);\n    setPrediction(null);\n  };\n  const handlePredictionModeChange = event => {\n    setPredictionMode(event.target.value);\n    setPrediction(null);\n  };\n  const handleSubmit = async patientData => {\n    try {\n      setLoading(true);\n      console.log('Submitting prediction with data:', patientData);\n      console.log('Prediction mode:', predictionMode);\n\n      // Add a timestamp to avoid caching issues\n      const timestamp = new Date().getTime();\n      let response;\n      if (predictionMode === 'ensemble') {\n        // Use the ensemble endpoint\n        response = await axios.post(`${API_BASE_URL}/api/predict-ensemble?_t=${timestamp}`, {\n          parameters: patientData,\n          timestamp: timestamp\n        });\n      } else if (predictionMode === 'high-accuracy') {\n        // Use the direct ensemble endpoint instead of high-accuracy-ensemble\n        response = await axios.post(`${API_BASE_URL}/api/direct-ensemble?_t=${timestamp}`, {\n          parameters: patientData,\n          timestamp: timestamp\n        });\n      } else {\n        // Use the single model endpoint\n        response = await axios.post(`${API_BASE_URL}/api/predict?_t=${timestamp}`, {\n          model_name: selectedModel,\n          parameters: patientData,\n          timestamp: timestamp\n        });\n      }\n      console.log('Prediction response:', response.data);\n      setPrediction(response.data);\n      setError(null);\n\n      // Scroll to top when prediction is received\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } catch (err) {\n      console.error('Error making prediction:', err);\n      setError('Failed to make a prediction. Please try again.');\n      setPrediction(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    elevation: 0,\n    sx: {\n      backgroundColor: alpha(theme.palette.primary.main, 0.95),\n      backdropFilter: 'blur(8px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MedicalInformationIcon, {\n    sx: {\n      mr: 1.5,\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"div\",\n    sx: {\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Alzheimer's Prediction Tool\")))), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: \"fade-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      my: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      textAlign: 'center',\n      mb: 4\n    },\n    className: \"slide-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h1\",\n    gutterBottom: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Alzheimer's Disease Prediction\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    sx: {\n      maxWidth: '800px',\n      mx: 'auto',\n      mb: 3,\n      color: 'text.secondary'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, \"This application predicts the likelihood of Alzheimer's disease based on patient parameters using tuned ML models.\"), /*#__PURE__*/React.createElement(Divider, {\n    sx: {\n      width: '100px',\n      mx: 'auto',\n      mb: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  })), error && /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 3,\n      my: 2,\n      bgcolor: alpha(theme.palette.error.main, 0.08),\n      borderLeft: `4px solid ${theme.palette.error.main}`,\n      borderRadius: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, error)), loading && !error ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      my: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mb: 3,\n      p: 2,\n      bgcolor: alpha(theme.palette.primary.main, 0.03),\n      borderRadius: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    sx: {\n      fontWeight: 500,\n      color: 'primary.main',\n      mb: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, \"Prediction Mode\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    value: predictionMode,\n    onChange: handlePredictionModeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"single\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 67\n      }\n    }),\n    label: \"Single Model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"ensemble\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 69\n      }\n    }),\n    label: \"Voting Ensemble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"high-accuracy\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 74\n      }\n    }),\n    label: \"Weighted Ensemble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  })))), predictionMode === 'single' && /*#__PURE__*/React.createElement(Box, {\n    className: \"slide-up\",\n    sx: {\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ModelSelector, {\n    models: Object.fromEntries(Object.entries(models).filter(([key]) => key !== 'high_accuracy_ensemble')),\n    selectedModel: selectedModel,\n    onChange: handleModelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 23\n    }\n  })), predictionMode === 'ensemble' && /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 3,\n      mb: 3,\n      bgcolor: alpha(theme.palette.primary.main, 0.03),\n      borderLeft: `4px solid ${theme.palette.primary.main}`,\n      borderRadius: 2,\n      transition: 'all 0.3s ease'\n    },\n    className: \"slide-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    color: \"primary.main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 23\n    }\n  }, \"Voting Ensemble\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      color: 'text.secondary'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 23\n    }\n  }, \"Using weighted majority voting across all available models for more reliable predictions.\")), predictionMode === 'high-accuracy' && /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      p: 3,\n      mb: 3,\n      bgcolor: alpha(theme.palette.secondary.main, 0.03),\n      borderLeft: `4px solid ${theme.palette.secondary.main}`,\n      borderRadius: 2,\n      transition: 'all 0.3s ease'\n    },\n    className: \"slide-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    color: \"secondary.main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 23\n    }\n  }, \"Weighted Ensemble\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    sx: {\n      color: 'text.secondary'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  }, \"Using an optimal weighted ensemble of our best models for more accurate and reliable predictions.\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 2,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 27\n    }\n  }, \"Accuracy:\"), \" 90%\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 27\n    }\n  }, \"ROC AUC:\"), \" 96%\"))), prediction && /*#__PURE__*/React.createElement(Box, {\n    className: \"slide-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PredictionResult, {\n    prediction: prediction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    sx: {\n      p: {\n        xs: 2,\n        md: 3\n      },\n      borderRadius: 2,\n      boxShadow: '0 4px 20px rgba(0,0,0,0.05)',\n      border: `1px solid ${alpha(theme.palette.divider, 0.1)}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputForm, {\n    onPredict: handleSubmit,\n    loading: loading,\n    featureDescriptions: features,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(Box, {\n    component: \"footer\",\n    sx: {\n      py: 3,\n      mt: 4,\n      textAlign: 'center',\n      borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n      color: 'text.secondary'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, \"\\xA9 \", new Date().getFullYear(), \" Alzheimer's Disease Prediction Tool\"))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Paper","CircularProgress","Grid","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","AppBar","Toolbar","useTheme","useMediaQuery","Divider","alpha","ModelSelector","InputForm","PredictionResult","axios","MedicalInformationIcon","API_BASE_URL","App","theme","isMobile","breakpoints","down","loading","setLoading","models","setModels","features","setFeatures","selectedModel","setSelectedModel","prediction","setPrediction","error","setError","predictionMode","setPredictionMode","fetchData","timestamp","Date","getTime","modelsResponse","get","featuresResponse","processedModels","Object","entries","data","forEach","modelName","modelDetails","accuracy","roc_auc","is_best","parameters","params","bestModel","find","_","details","reduce","best","name","err","console","handleModelChange","event","target","value","handlePredictionModeChange","handleSubmit","patientData","log","response","post","model_name","window","scrollTo","top","behavior","createElement","Fragment","position","elevation","sx","backgroundColor","palette","primary","main","backdropFilter","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","mr","fontSize","variant","component","fontWeight","maxWidth","className","my","textAlign","mb","gutterBottom","color","mx","width","p","bgcolor","borderLeft","borderRadius","justifyContent","container","spacing","item","xs","md","row","onChange","control","label","fromEntries","filter","key","transition","secondary","mt","boxShadow","border","divider","onPredict","featureDescriptions","py","borderTop","getFullYear"],"sources":["/Users/roaattaallah/Desktop/MLFlow_Project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Paper, \n  CircularProgress, \n  Grid, \n  FormControl, \n  FormLabel, \n  RadioGroup, \n  FormControlLabel, \n  Radio,\n  AppBar,\n  Toolbar,\n  useTheme,\n  useMediaQuery,\n  Divider,\n  alpha\n} from '@mui/material';\nimport ModelSelector from './components/ModelSelector';\nimport InputForm from './components/InputForm';\nimport PredictionResult from './components/PredictionResult';\nimport axios from 'axios';\nimport './styles.css';\nimport MedicalInformationIcon from '@mui/icons-material/MedicalInformation';\n\n// Define the API base URL\nconst API_BASE_URL = 'http://localhost:5030';\n\nfunction App() {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  \n  const [loading, setLoading] = useState(true);\n  const [models, setModels] = useState({});\n  const [features, setFeatures] = useState({});\n  const [selectedModel, setSelectedModel] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const [error, setError] = useState(null);\n  const [predictionMode, setPredictionMode] = useState('single'); // 'single', 'ensemble', or 'high-accuracy'\n\n  // Fetch models and features on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // Add timestamp to prevent caching\n        const timestamp = new Date().getTime();\n        const modelsResponse = await axios.get(`${API_BASE_URL}/api/models?_t=${timestamp}`);\n        const featuresResponse = await axios.get(`${API_BASE_URL}/api/features?_t=${timestamp}`);\n        \n        // Process models data to ensure consistent structure\n        const processedModels = {};\n        Object.entries(modelsResponse.data).forEach(([modelName, modelDetails]) => {\n          processedModels[modelName] = {\n            accuracy: modelDetails.accuracy,\n            roc_auc: modelDetails.roc_auc || 0,\n            is_best: modelDetails.is_best,\n            // Ensure parameters are available under a consistent key name\n            parameters: modelDetails.parameters || modelDetails.params || {}\n          };\n        });\n        \n        setModels(processedModels);\n        setFeatures(featuresResponse.data);\n        \n        // Set the best model as default or the one with highest ROC AUC if no best is marked\n        let bestModel = Object.entries(processedModels).find(\n          ([_, details]) => details.is_best\n        );\n        \n        if (!bestModel) {\n          // If no best model is marked, select the one with highest ROC AUC\n          bestModel = Object.entries(processedModels).reduce((best, [name, details]) => {\n            if (!best || (details.roc_auc && details.roc_auc > best[1].roc_auc)) {\n              return [name, details];\n            }\n            return best;\n          }, null);\n          \n          // If no model has ROC AUC, fall back to accuracy\n          if (!bestModel || !bestModel[1].roc_auc) {\n            bestModel = Object.entries(processedModels).reduce((best, [name, details]) => {\n              if (!best || details.accuracy > best[1].accuracy) {\n                return [name, details];\n              }\n              return best;\n            }, null);\n          }\n        }\n        \n        if (bestModel) {\n          setSelectedModel(bestModel[0]);\n        }\n        \n        setError(null);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to load models or features. Please check if the backend server is running.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleModelChange = (event) => {\n    setSelectedModel(event.target.value);\n    setPrediction(null);\n  };\n\n  const handlePredictionModeChange = (event) => {\n    setPredictionMode(event.target.value);\n    setPrediction(null);\n  };\n\n  const handleSubmit = async (patientData) => {\n    try {\n      setLoading(true);\n      console.log('Submitting prediction with data:', patientData);\n      console.log('Prediction mode:', predictionMode);\n      \n      // Add a timestamp to avoid caching issues\n      const timestamp = new Date().getTime();\n      \n      let response;\n      \n      if (predictionMode === 'ensemble') {\n        // Use the ensemble endpoint\n        response = await axios.post(`${API_BASE_URL}/api/predict-ensemble?_t=${timestamp}`, {\n          parameters: patientData,\n          timestamp: timestamp\n        });\n      } else if (predictionMode === 'high-accuracy') {\n        // Use the direct ensemble endpoint instead of high-accuracy-ensemble\n        response = await axios.post(`${API_BASE_URL}/api/direct-ensemble?_t=${timestamp}`, {\n          parameters: patientData,\n          timestamp: timestamp\n        });\n      } else {\n        // Use the single model endpoint\n        response = await axios.post(`${API_BASE_URL}/api/predict?_t=${timestamp}`, {\n          model_name: selectedModel,\n          parameters: patientData,\n          timestamp: timestamp\n        });\n      }\n      \n      console.log('Prediction response:', response.data);\n      setPrediction(response.data);\n      setError(null);\n      \n      // Scroll to top when prediction is received\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } catch (err) {\n      console.error('Error making prediction:', err);\n      setError('Failed to make a prediction. Please try again.');\n      setPrediction(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" elevation={0} sx={{ \n        backgroundColor: alpha(theme.palette.primary.main, 0.95),\n        backdropFilter: 'blur(8px)'\n      }}>\n        <Toolbar>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <MedicalInformationIcon sx={{ mr: 1.5, fontSize: 30 }} />\n            <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 500 }}>\n              Alzheimer's Prediction Tool\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      \n      <Container maxWidth=\"lg\" className=\"fade-in\">\n        <Box sx={{ my: 4 }}>\n          <Box sx={{ textAlign: 'center', mb: 4 }} className=\"slide-up\">\n            <Typography variant=\"h3\" component=\"h1\" gutterBottom color=\"primary\">\n              Alzheimer's Disease Prediction\n            </Typography>\n            \n            <Typography variant=\"subtitle1\" gutterBottom sx={{ maxWidth: '800px', mx: 'auto', mb: 3, color: 'text.secondary' }}>\n              This application predicts the likelihood of Alzheimer's disease based on patient parameters using tuned ML models.\n            </Typography>\n            \n            <Divider sx={{ width: '100px', mx: 'auto', mb: 4 }} />\n          </Box>\n\n          {error && (\n            <Paper sx={{ \n              p: 3, \n              my: 2, \n              bgcolor: alpha(theme.palette.error.main, 0.08),\n              borderLeft: `4px solid ${theme.palette.error.main}`,\n              borderRadius: 1\n            }}>\n              <Typography color=\"error\">{error}</Typography>\n            </Paper>\n          )}\n\n          {loading && !error ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Grid container spacing={4}>\n                {/* Left side: Model selector and prediction result */}\n                <Grid item xs={12} md={4}>\n                  <Box sx={{ mb: 3, p: 2, bgcolor: alpha(theme.palette.primary.main, 0.03), borderRadius: 2 }}>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\" sx={{ fontWeight: 500, color: 'primary.main', mb: 1 }}>\n                        Prediction Mode\n                      </FormLabel>\n                      <RadioGroup\n                        row\n                        value={predictionMode}\n                        onChange={handlePredictionModeChange}\n                      >\n                        <FormControlLabel value=\"single\" control={<Radio />} label=\"Single Model\" />\n                        <FormControlLabel value=\"ensemble\" control={<Radio />} label=\"Voting Ensemble\" />\n                        <FormControlLabel value=\"high-accuracy\" control={<Radio />} label=\"Weighted Ensemble\" />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                  \n                  {predictionMode === 'single' && (\n                    <Box className=\"slide-up\" sx={{ mb: 3 }}>\n                      <ModelSelector \n                        models={Object.fromEntries(\n                          Object.entries(models).filter(([key]) => key !== 'high_accuracy_ensemble')\n                        )} \n                        selectedModel={selectedModel} \n                        onChange={handleModelChange} \n                      />\n                    </Box>\n                  )}\n                  \n                  {predictionMode === 'ensemble' && (\n                    <Paper sx={{ \n                      p: 3, \n                      mb: 3, \n                      bgcolor: alpha(theme.palette.primary.main, 0.03),\n                      borderLeft: `4px solid ${theme.palette.primary.main}`,\n                      borderRadius: 2,\n                      transition: 'all 0.3s ease'\n                    }} className=\"slide-up\">\n                      <Typography variant=\"h6\" gutterBottom color=\"primary.main\">\n                        Voting Ensemble\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                        Using weighted majority voting across all available models for more reliable predictions.\n                      </Typography>\n                    </Paper>\n                  )}\n                  \n                  {predictionMode === 'high-accuracy' && (\n                    <Paper sx={{ \n                      p: 3, \n                      mb: 3, \n                      bgcolor: alpha(theme.palette.secondary.main, 0.03),\n                      borderLeft: `4px solid ${theme.palette.secondary.main}`,\n                      borderRadius: 2,\n                      transition: 'all 0.3s ease'\n                    }} className=\"slide-up\">\n                      <Typography variant=\"h6\" gutterBottom color=\"secondary.main\">\n                        Weighted Ensemble\n                      </Typography>\n                      <Typography variant=\"body2\" gutterBottom sx={{ color: 'text.secondary' }}>\n                        Using an optimal weighted ensemble of our best models for more accurate and reliable predictions.\n                      </Typography>\n                      <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          <strong>Accuracy:</strong> 90%\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          <strong>ROC AUC:</strong> 96%\n                        </Typography>\n                      </Box>\n                    </Paper>\n                  )}\n                  \n                  {prediction && (\n                    <Box className=\"slide-up\">\n                      <PredictionResult prediction={prediction} />\n                    </Box>\n                  )}\n                </Grid>\n                \n                {/* Right side: Input form */}\n                <Grid item xs={12} md={8}>\n                  <Paper \n                    elevation={0}\n                    sx={{ \n                      p: { xs: 2, md: 3 }, \n                      borderRadius: 2,\n                      boxShadow: '0 4px 20px rgba(0,0,0,0.05)',\n                      border: `1px solid ${alpha(theme.palette.divider, 0.1)}`\n                    }}\n                  >\n                    <InputForm \n                      onPredict={handleSubmit}\n                      loading={loading}\n                      featureDescriptions={features}\n                    />\n                  </Paper>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </Box>\n        \n        <Box \n          component=\"footer\" \n          sx={{ \n            py: 3, \n            mt: 4, \n            textAlign: 'center',\n            borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n            color: 'text.secondary'\n          }}\n        >\n          <Typography variant=\"body2\">\n            © {new Date().getFullYear()} Alzheimer's Disease Prediction Tool\n          </Typography>\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}