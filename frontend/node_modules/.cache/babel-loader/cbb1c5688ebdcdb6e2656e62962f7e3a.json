{"ast":null,"code":"import React from'react';import{Card,CardContent,Typography,Box,Chip}from'@mui/material';import WarningIcon from'@mui/icons-material/Warning';import CheckCircleIcon from'@mui/icons-material/CheckCircle';// Dictionary for mapping numeric codes to human-readable values (same as in PatientForm)\nconst valueMappings={Gender:{0:'Male',1:'Female'},Ethnicity:{0:'Caucasian',1:'African American',2:'Asian',3:'Other'},EducationLevel:{0:'None',1:'High School',2:'Bachelor\\'s',3:'Higher'},Smoking:{0:'No',1:'Yes'},FamilyHistoryAlzheimers:{0:'No',1:'Yes'},CardiovascularDisease:{0:'No',1:'Yes'},Diabetes:{0:'No',1:'Yes'},Depression:{0:'No',1:'Yes'},HeadInjury:{0:'No',1:'Yes'},Hypertension:{0:'No',1:'Yes'},MemoryComplaints:{0:'No',1:'Yes'},BehavioralProblems:{0:'No',1:'Yes'},Confusion:{0:'No',1:'Yes'},Disorientation:{0:'No',1:'Yes'},PersonalityChanges:{0:'No',1:'Yes'},DifficultyCompletingTasks:{0:'No',1:'Yes'},Forgetfulness:{0:'No',1:'Yes'}};const PredictionResult=_ref=>{let{prediction}=_ref;const isHighRisk=prediction.risk==='High';// Helper function to format model name nicely\nconst formatModelName=modelName=>{const modelMappings={'rf':'Random Forest','xgboost':'XGBoost','logistic':'Logistic Regression','svm':'Support Vector Machine','knn':'K-Nearest Neighbors','nn':'Neural Network'};return modelMappings[modelName]||modelName;};return/*#__PURE__*/React.createElement(Card,{sx:{mb:3,bgcolor:isHighRisk?'rgba(244, 67, 54, 0.05)':'rgba(76, 175, 80, 0.05)',borderLeft:isHighRisk?'4px solid #f44336':'4px solid #4caf50',boxShadow:'0 4px 8px rgba(0,0,0,0.1)'}},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between',mb:2}},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:isHighRisk?'error':'success',sx:{fontWeight:'bold'}},isHighRisk?'High Risk':'Low Risk'),/*#__PURE__*/React.createElement(Chip,{icon:isHighRisk?/*#__PURE__*/React.createElement(WarningIcon,null):/*#__PURE__*/React.createElement(CheckCircleIcon,null),label:prediction.probability?`${(prediction.probability*100).toFixed(1)}%`:'',color:isHighRisk?'error':'success'})),/*#__PURE__*/React.createElement(Box,{sx:{display:'flex',flexDirection:'column',p:2,borderRadius:1,bgcolor:'background.paper'}},/*#__PURE__*/React.createElement(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1}},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"text.secondary\"},\"Model:\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",fontWeight:\"bold\"},formatModelName(prediction.model_type||\"Unknown\"))),/*#__PURE__*/React.createElement(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1}},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"text.secondary\"},\"Accuracy:\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",fontWeight:\"bold\"},(prediction.accuracy*100).toFixed(1),\"%\")),prediction.roc_auc&&/*#__PURE__*/React.createElement(Box,{sx:{display:'flex',justifyContent:'space-between'}},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"text.secondary\"},\"ROC AUC:\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",fontWeight:\"bold\"},(prediction.roc_auc*100).toFixed(1),\"%\")))));};export default PredictionResult;","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Chip","WarningIcon","CheckCircleIcon","valueMappings","Gender","Ethnicity","EducationLevel","Smoking","FamilyHistoryAlzheimers","CardiovascularDisease","Diabetes","Depression","HeadInjury","Hypertension","MemoryComplaints","BehavioralProblems","Confusion","Disorientation","PersonalityChanges","DifficultyCompletingTasks","Forgetfulness","PredictionResult","_ref","prediction","isHighRisk","risk","formatModelName","modelName","modelMappings","createElement","sx","mb","bgcolor","borderLeft","boxShadow","display","alignItems","justifyContent","variant","color","fontWeight","icon","label","probability","toFixed","flexDirection","p","borderRadius","model_type","accuracy","roc_auc"],"sources":["/Users/roaattaallah/Desktop/MLFlow_Project/frontend/src/components/PredictionResult.js"],"sourcesContent":["import React from 'react';\nimport { \n  Card, \n  CardContent, \n  Typography, \n  Box,\n  Chip\n} from '@mui/material';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\n// Dictionary for mapping numeric codes to human-readable values (same as in PatientForm)\nconst valueMappings = {\n  Gender: {\n    0: 'Male',\n    1: 'Female'\n  },\n  Ethnicity: {\n    0: 'Caucasian',\n    1: 'African American',\n    2: 'Asian',\n    3: 'Other'\n  },\n  EducationLevel: {\n    0: 'None',\n    1: 'High School',\n    2: 'Bachelor\\'s',\n    3: 'Higher'\n  },\n  Smoking: {\n    0: 'No',\n    1: 'Yes'\n  },\n  FamilyHistoryAlzheimers: {\n    0: 'No',\n    1: 'Yes'\n  },\n  CardiovascularDisease: {\n    0: 'No',\n    1: 'Yes'\n  },\n  Diabetes: {\n    0: 'No',\n    1: 'Yes'\n  },\n  Depression: {\n    0: 'No',\n    1: 'Yes'\n  },\n  HeadInjury: {\n    0: 'No',\n    1: 'Yes'\n  },\n  Hypertension: {\n    0: 'No',\n    1: 'Yes'\n  },\n  MemoryComplaints: {\n    0: 'No',\n    1: 'Yes'\n  },\n  BehavioralProblems: {\n    0: 'No',\n    1: 'Yes'\n  },\n  Confusion: {\n    0: 'No',\n    1: 'Yes'\n  },\n  Disorientation: {\n    0: 'No',\n    1: 'Yes'\n  },\n  PersonalityChanges: {\n    0: 'No',\n    1: 'Yes'\n  },\n  DifficultyCompletingTasks: {\n    0: 'No',\n    1: 'Yes'\n  },\n  Forgetfulness: {\n    0: 'No',\n    1: 'Yes'\n  }\n};\n\nconst PredictionResult = ({ prediction }) => {\n  const isHighRisk = prediction.risk === 'High';\n  \n  // Helper function to format model name nicely\n  const formatModelName = (modelName) => {\n    const modelMappings = {\n      'rf': 'Random Forest',\n      'xgboost': 'XGBoost',\n      'logistic': 'Logistic Regression',\n      'svm': 'Support Vector Machine',\n      'knn': 'K-Nearest Neighbors',\n      'nn': 'Neural Network'\n    };\n    \n    return modelMappings[modelName] || modelName;\n  };\n  \n  return (\n    <Card sx={{ \n      mb: 3, \n      bgcolor: isHighRisk ? 'rgba(244, 67, 54, 0.05)' : 'rgba(76, 175, 80, 0.05)',\n      borderLeft: isHighRisk ? '4px solid #f44336' : '4px solid #4caf50',\n      boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n    }}>\n      <CardContent>\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\n          <Typography variant=\"h6\" color={isHighRisk ? 'error' : 'success'} sx={{ fontWeight: 'bold' }}>\n            {isHighRisk ? 'High Risk' : 'Low Risk'}\n          </Typography>\n          <Chip \n            icon={isHighRisk ? <WarningIcon /> : <CheckCircleIcon />}\n            label={prediction.probability ? `${(prediction.probability * 100).toFixed(1)}%` : ''}\n            color={isHighRisk ? 'error' : 'success'}\n          />\n        </Box>\n        \n        <Box sx={{ \n          display: 'flex', \n          flexDirection: 'column', \n          p: 2, \n          borderRadius: 1, \n          bgcolor: 'background.paper',\n        }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Model:\n            </Typography>\n            <Typography variant=\"body2\" fontWeight=\"bold\">\n              {formatModelName(prediction.model_type || \"Unknown\")}\n            </Typography>\n          </Box>\n          \n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Accuracy:\n            </Typography>\n            <Typography variant=\"body2\" fontWeight=\"bold\">\n              {(prediction.accuracy * 100).toFixed(1)}%\n            </Typography>\n          </Box>\n          \n          {prediction.roc_auc && (\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ROC AUC:\n              </Typography>\n              <Typography variant=\"body2\" fontWeight=\"bold\">\n                {(prediction.roc_auc * 100).toFixed(1)}%\n              </Typography>\n            </Box>\n          )}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PredictionResult; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}